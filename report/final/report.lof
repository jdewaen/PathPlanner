\select@language {english}
\select@language {dutch}
\select@language {english}
\select@language {dutch}
\select@language {english}
\select@language {english}
\select@language {dutch}
\select@language {english}
\select@language {english}
\addvspace {10pt}
\addvspace {10pt}
\select@language {dutch}
\addvspace {10pt}
\select@language {english}
\addvspace {10pt}
\addvspace {10pt}
\contentsline {figure}{\numberline {2.1}{\ignorespaces A visualization of the linear approximation for the 2-norm}}{9}{figure.caption.6}
\contentsline {figure}{\numberline {2.2}{\ignorespaces A visual representation of how obstacle avoidance works. The top image shows the vehicle's current position as the filled circle, with its path in previous time steps as hollow circles. The color of the edges of the obstacle represent whether or not the vehicle is in the safe zone for that edge. An edge is yellow if the vehicle is in the safe zone, and red otherwise. The middle image shows the safe zone defined by a yellow edge in yellow. Note how the vehicle is on one side of the black line and the obstacle is entirely on the other side. The bottom image shows an edge for which the vehicle is not in the safe zone (represented in red this time). As long as the vehicle is in the safe zone of at least one edge, it cannot collide with the obstacle.\relax }}{11}{figure.caption.7}
\contentsline {figure}{\numberline {2.4}{\ignorespaces A geometric proof for the vehicle offset formula in Equation \ref {eq:offset}. Measures are marked in blue. $P$ is the center of mass of the UAV. $d$ is the line defined by edge $i$ of an obstacle. The obstacle is the orange region. We wish to translate $d$ vertically to $d'$ such that when the UAV's center of mass $P$ touches $d'$, the circle with radius $r$ (representing the UAV's shape, colored in grey) touches $d$ in $Q$. If $d'$ is used for the constraint instead of $d$, the UAV cannot collide with the obstacle. The difference between the intercepts of $d$ and $d'$ is $v_i = |PM|$. The slope of $d'$ is $a_i$, so if $XY$ is horizontal and $|XY| = 1$, then $|MY| = a_i$. Corner $M$ is the same in both triangle $PQM$ and $XYM$, as marked in red. Corner $Q$ and $Y$ are both right angles. This means $PQM$ and $XYM$ are similar triangles. As a result: if $|PQ| = r$, then $|QM| = a_ir$. Using Pythagoras' theorem: $v_i = \sqrt {r^2 + a_i^2r^2} = r\sqrt {1+a_i^2}$.\relax }}{13}{figure.caption.9}
\addvspace {10pt}
\contentsline {figure}{\numberline {3.1}{\ignorespaces An example of how a grid is used to build the graph for the path finding algorithm. Each point is a node on the graph. If two points are connected by a line, their nodes in the graph also are connected by an edge. Diagonal edges are not shown here for clarity.\relax }}{17}{figure.caption.10}
\contentsline {figure}{\numberline {3.2}{\ignorespaces The red line shows a typical A* path, compared to the path found by Theta*. The gray rectangle is an obstacle.\relax }}{18}{figure.caption.11}
\contentsline {figure}{\numberline {3.3}{\ignorespaces The left image shows the results after the Theta* algorithm has executed. The blue shapes are obstacles, while the gray line is the Theta* path. The right image shows the results after the path is segmented. Extra nodes have been added to the Theta* path, as marked by the green circles. These circles depict the transitions between segments.\relax }}{23}{figure.caption.16}
\contentsline {figure}{\numberline {3.4}{\ignorespaces The left image shows the result after the genetic algorithm has executed. The obstacles in red have been selected to be modeled in the MILP problem. The dark grey shape is the convex allowed region generated by the genetic algortihm. Note how it does not overlap with any of the blue obstacles. The right image shows the final result. The trail of circles show the path of the vehicle up to the current time step, which is represented by the filled circles. The red and yellow colors depict the same information as in figure \ref {fig:obs}\relax }}{24}{figure.caption.17}
\contentsline {figure}{\numberline {3.5}{\ignorespaces genetic convexity example\relax }}{27}{figure.caption.18}
\addvspace {10pt}
\contentsline {figure}{\numberline {4.1}{\ignorespaces An example of corner cutting\relax }}{30}{figure.caption.19}
\contentsline {figure}{\numberline {4.2}{\ignorespaces These images are three consecutive time steps which demonstrate how the corner cutting prevention works. In \ref {fig:cc-fixed-1}, the UAV is in the safe region of the left edge (which is indicated by the yellow color). In \ref {fig:cc-fixed-3}, the UAV is in the safe region for the right edge, but not the left edge. To ensure that the UAV does not cut the corner, the UAV must enter the safe region of the right edge before it exits the safe region of the left edge. The intersection between those two safe regions is the inverted yellow triangle in \ref {fig:cc-fixed-2}. If the UAV spends at least one time step in that yellow, it cannot cut the corner.\relax }}{31}{figure.caption.20}
\contentsline {figure}{\numberline {4.3}{\ignorespaces \ref {fig:goal-ext-pre} shows the UAV right before a reaching its goal. The blue circle shows the position of the UAV at the segment transition. The goal position is the green dot, while the square around it show the tolerance region where the goal is considered to be reached. Note how the segment transition happens earlier because of the tolerance region. \ref {fig:goal-ext-post} shows the same, only this time a (blue) finish line is added. This time, the UAV needs to cross the finish line so it so the segment transition is roughly as far along the path as planned.\relax }}{32}{figure.caption.21}
\contentsline {figure}{\numberline {4.4}{\ignorespaces A visual demonstration of when a maximum goal velocity is used. Points B and D are individual turn events. The segment for event B starts at A, with $|AB|$ being the desired expansion distance for the segment. However, because D is so close to B, the end of the segment C cannot be placed at the desired expansion distance from B. Instead, C is placed in the middle between B and D, such that $|BC|=|CD|$. The first segment solves the trajectory from A to C past turn event B, the second segment starts as C, past D and onwards. The goal is to ensure that the UAV can still safely stop at D when it starts the second segment at C. This is done by limiting the maximum velocity of the UAV when it reaches the goal C in the first segment.\relax }}{33}{figure.caption.22}
\contentsline {figure}{\numberline {4.5}{\ignorespaces An example of how transition between segments can fail. In \ref {fig:stoppoint-fail-pre}, shows the UAV right before the segment transition which happens at the blue circle. \ref {fig:stoppoint-fail-post} shows the orange initial safe region and dark grey expanded safe region of the next segment, after the transition. The next segment fails to solve because the UAV cannot come to a stop within the safe region. The position of the UAV shows where the UAV came to a stop in the previous segment (the safe region of which is the grey region in \ref {fig:stoppoint-fail-pre}).\relax }}{34}{figure.caption.23}
\contentsline {figure}{\numberline {4.6}{\ignorespaces \ref {fig:ga-seed-without} shows the initial safe region without the extra stop points in orange. \ref {fig:ga-seed-with} shows the initial safe region with the extra stop points. The position marked with "1" is the stop point for the initial velocity, while the position marked with "2" is the stop point for the trajectory after the goal has been reached. \ref {fig:ga-seed-nomaxvela} shows how the stop point ensured that the UAV could stop. The UAV leaves the initial safe region because it already has started to turn, however the stop point clearly provided enough space.\relax }}{34}{figure.caption.24}
\contentsline {figure}{\numberline {4.7}{\ignorespaces \ref {fig:ga-seed-nomaxvelb} and \ref {fig:ga-seed-maxvel} show the trajectory respectively without and with the maximum goal velocity enabled. In \ref {fig:ga-seed-nomaxvelb}, the UAV overshoots the corner which results in a slower trajectory.\relax }}{35}{figure.caption.25}
\contentsline {figure}{\numberline {4.8}{\ignorespaces \ref {fig:transition-suboptimal-pre} shows the optimal approach to the goal of the previous segment. However, as seen in \ref {fig:transition-suboptimal-post}, this is a very bad start state for the next segment. By starting the next segment 5 time steps earlier in \ref {fig:transition-suboptimal-fixed}, this bad approach for can be partially mitigated.\relax }}{36}{figure.caption.26}
\contentsline {figure}{\numberline {4.9}{\ignorespaces An overview of the visualization tool that shows the results of the algorithm.\relax }}{37}{figure.caption.27}
\contentsline {figure}{\numberline {4.10}{\ignorespaces Visualization of the obstacles, initial path, turn events and segment goals}}{39}{figure.caption.34}
\contentsline {figure}{\numberline {4.11}{\ignorespaces Visualization of the safe region, obstacle edge constrain state and the segment transitions.}}{40}{figure.caption.38}
\contentsline {figure}{\numberline {4.12}{\ignorespaces Visualization of the initial safe region and the segment goal conditions}}{41}{figure.caption.41}
\addvspace {10pt}
\contentsline {figure}{\numberline {5.1}{\ignorespaces The parameters used for testing\relax }}{44}{figure.caption.42}
\contentsline {figure}{\numberline {5.2}{\ignorespaces The synthetic scenarios\relax }}{46}{figure.caption.44}
\contentsline {figure}{\numberline {5.3}{\ignorespaces A zoomed-in view of the first small the San Francisco scenario\relax }}{47}{figure.caption.46}
\contentsline {figure}{\numberline {5.4}{\ignorespaces The San Francisco scenarios\relax }}{48}{figure.caption.47}
\contentsline {figure}{\numberline {5.5}{\ignorespaces A zoomed-in view of the first small the Leuven scenario\relax }}{49}{figure.caption.49}
\contentsline {figure}{\numberline {5.6}{\ignorespaces The Leuven scenarios\relax }}{50}{figure.caption.50}
\contentsline {figure}{\numberline {5.7}{\ignorespaces \relax }}{52}{figure.caption.53}
\contentsline {figure}{\numberline {5.8}{\ignorespaces \relax }}{56}{figure.caption.60}
\contentsline {figure}{\numberline {5.9}{\ignorespaces \relax }}{57}{figure.caption.61}
\contentsline {figure}{\numberline {5.10}{\ignorespaces \relax }}{58}{figure.caption.62}
\contentsline {figure}{\numberline {5.11}{\ignorespaces stability data\relax }}{59}{figure.caption.63}
\contentsline {figure}{\numberline {5.12}{\ignorespaces A case where the transition between segments fails\relax }}{60}{figure.caption.64}
\contentsline {figure}{\numberline {5.13}{\ignorespaces \relax }}{60}{figure.caption.65}
\contentsline {figure}{\numberline {5.14}{\ignorespaces The error bars show the 95\% confidence interval.\relax }}{61}{figure.caption.66}
\contentsline {figure}{\numberline {5.15}{\ignorespaces linear approx data\relax }}{62}{figure.caption.67}
\contentsline {figure}{\numberline {5.16}{\ignorespaces time step data\relax }}{63}{figure.caption.68}
\contentsline {figure}{\numberline {5.17}{\ignorespaces maxtime data\relax }}{64}{figure.caption.69}
\contentsline {figure}{\numberline {5.18}{\ignorespaces approach data\relax }}{65}{figure.caption.70}
\addvspace {10pt}
\addvspace {10pt}
\contentsline {figure}{\numberline {7.1}{\ignorespaces Three different testing scenarios, each with the same amount of obstacles. In each scenario, the UAV needs nearly the same amount of time steps to reach its goal. The only difference is the layout of the obstacles.\relax }}{72}{figure.caption.71}
\contentsline {figure}{\numberline {7.2}{\ignorespaces Performance of the MILP problem.\relax }}{73}{figure.caption.72}
\contentsline {figure}{\numberline {7.3}{\ignorespaces \relax }}{74}{figure.caption.73}
\addvspace {10pt}
\select@language {dutch}
\select@language {english}
\select@language {dutch}
\select@language {english}
\select@language {dutch}
\select@language {english}
\select@language {dutch}
\select@language {english}
\select@language {dutch}
\select@language {english}
